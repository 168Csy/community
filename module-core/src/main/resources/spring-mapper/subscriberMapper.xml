<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wl.lch.core.SubscriberMapper">
  <resultMap id="BaseResultMap" type="com.wl.lch.entity.Subscriber">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="revise_time" jdbcType="TIMESTAMP" property="reviseTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wl.lch.entity.Subscriber">
    <result column="signature" jdbcType="LONGVARCHAR" property="signature" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, user_id, name, phone, token, point, gender, image_url, create_time,
    revise_time
  </sql>
  <sql id="Blob_Column_List">
    signature
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from community_mi_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from community_mi_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wl.lch.entity.Subscriber">
    insert into community_mi_user (id, account, password,
    user_id, name, phone,
    token, point, gender,
    image_url, create_time, revise_time,
    signature)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
    #{token,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR},
    #{imageUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{reviseTime,jdbcType=TIMESTAMP},
    #{signature,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wl.lch.entity.Subscriber">
    insert into community_mi_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="reviseTime != null">
        revise_time,
      </if>
      <if test="signature != null">
        signature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviseTime != null">
        #{reviseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wl.lch.entity.Subscriber">
    update community_mi_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviseTime != null">
        revise_time = #{reviseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wl.lch.entity.Subscriber">
    update community_mi_user
    set account = #{account,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    phone = #{phone,jdbcType=VARCHAR},
    token = #{token,jdbcType=VARCHAR},
    point = #{point,jdbcType=INTEGER},
    gender = #{gender,jdbcType=VARCHAR},
    image_url = #{imageUrl,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    revise_time = #{reviseTime,jdbcType=TIMESTAMP},
    signature = #{signature,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wl.lch.entity.Subscriber">
    update community_mi_user
    set account = #{account,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    phone = #{phone,jdbcType=VARCHAR},
    token = #{token,jdbcType=VARCHAR},
    point = #{point,jdbcType=INTEGER},
    gender = #{gender,jdbcType=VARCHAR},
    image_url = #{imageUrl,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    revise_time = #{reviseTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByAccount" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from community_mi_user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectByName" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from community_mi_user
    where name = #{name,jdbcType=VARCHAR}
  </select>
</mapper>